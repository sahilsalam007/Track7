<%- include("../../views/partials/user/header") %>
    <style>
        :root {
            --primary: #2A2F4F;
            --secondary: #917FB3;
            --accent: #E5BEEC;
            --light: #FDE2F3;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #f5f5f5;
        }

        .checkout-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 15px;
        }

        .checkout-section {
            background: white;
            border-radius: 20px;
            box-shadow: 0 4px 24px rgba(0,0,0,0.06);
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--light);
        }

        .order-status {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: bold;
        }

        .status-pending { background: #fff3cd; color: #856404; }
        .status-delivered { background: #d4edda; color: #155724; }
        .status-shipped { background: #cce5ff; color: #004085; }
        .status-cancelled { background: #f8d7da; color: #721c24; }

        .order-item {
            display: flex;
            gap: 1.5rem;
            margin-bottom: 1.5rem;
            padding: 1rem;
            border-radius: 12px;
            background: #fff;
        }

        .order-item img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
        }

        .order-details {
            flex-grow: 1;
        }

        .price-details {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 2px solid var(--light);
        }

        .detail-item {
             
            justify-content: space-between;
        }

        .total-price {
            font-size: 1.2rem;
            font-weight: bold;
            color: var(--primary);
        }
        
        .btn {
            width: 100%;
            padding: 0.85rem;
            background-color: rgb(226, 65, 65);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-weight: bold;
            margin-top: 1rem;
        }
        .btn:hover {
            background-color: #b02a37;
            color: white;
        }
        .cancell-btn{
            width:20%;
            padding: 0.85rem;
            background-color:#000000 !important;
            color: rgb(88, 76, 76);
            border: none !important;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-weight: bold;
            margin-top: -15rem;
           margin-left: 45rem;

        }
        .cancell-btn:hover{
            background-color:red !important;
            color: #ffffff ;
        }
        .header_nav_option{
            display: none;
        }
        .status-returned {
            background: #f8d7da; 
            color: #721c24;
        }
        .item-status {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: bold;
        }
        .styled-return-btn {
    background-color: rgb(0, 0, 0);
    color: #FFD700;
    border: 2px solid #FFD700;
    padding: 10px 20px;
    margin-top: 15px;
    border-radius: 6px;
    font-weight: bold;
    cursor: pointer;
    transition: 0.3s ease;
}

.styled-return-btn:hover {
    background-color: #FFD700;
    color: white;
}

    </style>
  
</head>
<body>
    <div class="checkout-container">
        <h1>My Orders</h1>

      
            <div class="alert "></div>
        <% if (!orders || orders.length === 0) { %>
            <p>No orders found.</p>
        <% } else { %>
            <% orders.forEach(order => { %>
                <div class="checkout-section">
                    <div class="order-header">
                        <div>
                            <h3>Order #<%= order.orderId%></h3>
                            <p class="text-muted"><%= new Date(order.createdOn).toDateString() %></p>
                        </div>
                        <div class="order-status 
    <% if (order.orderedItems.length === 1 && order.orderedItems[0].productStatus === 'Cancelled') { %>status-cancelled
    <% } else if (order.status === 'Pending') { %>status-pending
    <% } else if (order.status === 'Shipped') { %>status-shipped
    <% } else if (order.status === 'Delivered') { %>status-delivered
    <% } else if (order.status === 'Cancelled') { %>status-cancelled
    <% } %>">
    <%= (order.orderedItems.every(item=>item.productStatus==='Cancelled')) ? 'Cancelled' : order.status %>
</div>

                               </div>
           <% order.orderedItems.forEach(item => { %>
    <div class="order-item">
        <img src="/Uploads/re-image/<%= item.product.productImage[0] %>" alt="<%= item.product.name %>">
        <div class="order-details">
            <h4><%= item.product.productName %></h4>
            <p>Price: ₹<%= item.price %></p>
            <p>Quantity: <%= item.quantity %></p>
            <p>Payment Status: <%= order.payment.status %></p>
            <p>Status: 
                <span class="item-status 
                    <% if (item.productStatus === 'Cancelled') { %>status-cancelled
                    <% } else if (item.productStatus === 'Returned') { %>status-returned
                    <% } else if (item.productStatus === 'Delivered') { %>status-delivered
                    <% } else if (item.productStatus === 'Shipped') { %>status-shipped
                    <% } else { %>status-pending<% } %>">
                    <%= item.productStatus %>
                </span>
            </p>
            <% if (item.size) { %><p>Size: <%= item.size %></p><% } %>

            <% if (order.status !== 'Delivered' && order.status !== 'return-requested' && item.productStatus !== 'Cancelled' && order.status !== 'returned') { %>
                <button type="button" class="cancell-btn" onclick="confirmCancel('<%= order.orderId %>', '<%= item._id %>')">
                    Cancel Item
                </button>
            <% } %>

            <% if (item.productStatus === 'Delivered') { %>
                <form id="returnForm-<%= item._id %>" action="/return-order/<%= order.orderId %>/<%= item._id %>" method="post">
    <input type="hidden" name="returnReason" id="returnReason-<%= item._id %>">
    <button type="button" class="return-btn styled-return-btn" onclick="askReturnReason('<%= order.orderId %>','<%= item._id %>')">Return Item</button>
</form>
            <% } %>
        </div>
    </div>
<% }); %>
                               
           <div class="price-details">
               <div class="detail-item">
                   <span>Total Price:</span>
                   <span>₹<%= order.totalPrice %></span>
               </div>
               <div class="detail-item">
                   <span>Discount:</span>
                   <span>- ₹<%= order.discount %></span>
               </div>
               <div class="detail-item total-price">
                   <span>Final Amount:</span>
                   <span>₹<%= order.finalAmount + (order.finalAmount * 0.1) + (order.discount * 0.1) %></span>
               </div>
           </div>
           
           <a class="btn" href="/order-details/<%= order._id %>">
               View Details
           </a>
           
                </div>
            <% }); %>
        <% } %>


        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                <% if (typeof totalPages !== "undefined" && typeof currentPage !== "undefined") { %>
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%=(i === currentPage) ? 'active' : '' %>">
                            <a class="page-link rounded-pill" href="?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
                <% } %>
            </ul>
        </nav>

    </div>
</body>
</html>
<script>
    function confirmCancel(orderId, itemId) {
    console.log('from confirm working');
    Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to cancel this item? This action cannot be undone.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, Cancel it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch("/cancel-order", {  
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ orderId: orderId, itemId: itemId })
            })
            .then(response => response.json())
            .then(data => {
                console.log("Cancel Response:", data);

                if (data.message === "Item cancelled successfully") {
                    Swal.fire({
                        title: "Cancelled!",
                        text: "Your item has been cancelled and refunded.",
                        icon: "success",
                        confirmButtonColor: "#3085d6"
                    }).then(() => {
                        setTimeout(() => {
                            location.reload();
                        }, 500);  
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: data.message || "Something went wrong.",
                        icon: "error",
                        confirmButtonColor: "#d33"
                    });
                }
            })
            .catch(error => {
                console.error("Fetch Error:", error);
                Swal.fire({
                    title: "Error!",
                    text: "Something went wrong. Please try again.",
                    icon: "error",
                    confirmButtonColor: "#d33"
                });
            });
        }
    });
}

    
    
    
    
    
    function askReturnReason(orderId,itemId) {
    Swal.fire({
        title: "Return Order",
        input: "text",
        inputLabel: "Please enter a reason for return",
        inputPlaceholder: "E.g., Wrong size, Defective product, etc.",
        showCancelButton: true,
        confirmButtonText: "Submit",
        cancelButtonText: "Cancel",
        inputValidator: (value) => {
            if (!value) {
                return "You need to provide a reason!";
            }
        }
    }).then((result) => {
        if (result.isConfirmed) {

            console.log('Frontend: Extracted orderId:', orderId, 'itemId:', itemId);
            fetch(`/return-order/${orderId}/${itemId}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ returnReason: result.value })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "Returned!",
                        text: "Your item has been returned successfully.",
                        icon: "success",
                        confirmButtonColor: "#3085d6"
                    }).then(() => {
                        setTimeout(() => {
                            location.reload();
                        }, 500);
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: data.message || "Something went wrong.",
                        icon: "error",
                        confirmButtonColor: "#d33"
                    });
                }
            })
            .catch(error => {
                console.error("Return Error:", error);
                Swal.fire({
                    title: "Error!",
                    text: "Something went wrong. Please try again.",
                    icon: "error",
                    confirmButtonColor: "#d33"
                });
            });
        }
    });
}
    </script>
<%- include("../../views/partials/user/footer") %>
